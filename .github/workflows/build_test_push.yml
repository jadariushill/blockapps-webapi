name: Build, Test, Push Docker

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_push_docker:
    name: Build/Test/Push Image
    runs-on: ubuntu-latest
    env:
      version: 0.0.0
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build React App
        run: |
          cd ${{ github.workspace }}/src/client
          npm run build

      - name: Test Container
        run: |
          cd ${{ github.workspace }}/src/test/cypress/e2e
          docker-compose up --exit-code-from cypress

      - name: Update Version
        id: update_version
        run: |
          npm install commit-analyzer-fail-on-no-release
          npm install semantic-release
          cd ${{ github.workspace }}/src/server
          npx semantic-release
          VTAG=$(cat ./package.json | jq --raw-output .version)
          echo "VTAG=${VTAG}" >> "$GITHUB_OUTPUT"
          echo $VTAG

      - name: Build Container
        run: |
          docker build -t blockappsserver .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: blockappsserver
          IMAGE_TAG: ${{ steps.update_version.outputs.VTAG }}
        run: |
          docker tag blockappsserver $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag blockappsserver $ECR_REGISTRY/$ECR_REPOSITORY:PROD
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:PROD
  adjust_iac:
    name: Adjust Infrastructure
    needs: build_push_docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Apply
        run: |
          cd ${{ github.workspace }}/src/terraform
          terraform init -backend-config="bucket=blockapps-server-backend-prod" -backend-config="key=state/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
          terraform apply --auto-approve -var="env=prod" -var="region=${{ secrets.AWS_REGION }}" -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="account_number=${{ secrets.AWS_ACCOUNT_NUMBER }}" -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -replace=module.env_prod[0].aws_ecs_task_definition.blockapps_server_task_def
